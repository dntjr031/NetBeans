/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.projectstore.view;

import com.model.panmae.PanmaeDAO;
import com.model.panmae.PanmaeDTO;
import com.model.product.ProductDAO;
import com.model.product.ProductDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author STU-03
 */
public class StoreMainGUI extends javax.swing.JFrame implements ActionListener {

    private String selId;
    private ProductDAO dao = new ProductDAO();
    private String[] colList = {"상품코드", "상품이름", "상품가격", "재고"};
    private String[] colSel = {"상품코드", "상품이름", "상품가격", "개수"};
    private String[] colPan = {"번호", "고객아이디", "상품코드", "개수", "가격", "판매원 아이디", "거래날짜"};
    private DefaultTableModel modelList = new DefaultTableModel();
    private DefaultTableModel modelSel = new DefaultTableModel();
    private DefaultTableModel modelPan = new DefaultTableModel();
    private int sum = 0;
    private int count = 0;
    private ArrayList<ProductDTO> list;
    private static ArrayList<ProductDTO> panmaeList;

    public DefaultTableModel getModelList() {
        return modelList;
    }

    public DefaultTableModel getModelSel() {
        return modelSel;
    }

    
    
    /**
     * Creates new form StoreMain
     */
    public StoreMainGUI() {
        initComponents();
        init();
        addEvent();
    }

    public StoreMainGUI(String id) {
        this();
        selId = id;
        tfUserId.setText(id);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        scroll1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        scroll2 = new javax.swing.JScrollPane();
        tablePanmae = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        scroll3 = new javax.swing.JScrollPane();
        tableSel = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfTotal = new javax.swing.JTextField();
        btPayment = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btCancle = new javax.swing.JButton();
        btCustomer = new javax.swing.JButton();
        btProduct = new javax.swing.JButton();
        btAccount = new javax.swing.JButton();
        tfUserId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btSearch = new javax.swing.JButton();
        btLogout = new javax.swing.JButton();
        cbSearch = new javax.swing.JComboBox<>();
        tfSearch1 = new javax.swing.JTextField();
        tfSearch2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btAccount1 = new javax.swing.JButton();
        btSearchAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/—Pngtree—vector_shop_icon_3762863-1.png"))); // NOI18N

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "상품코드", "상품이름", "상품가격", "상품재고"
            }
        ));
        scroll1.setViewportView(tableList);

        tablePanmae.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        scroll2.setViewportView(tablePanmae);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("결제 목록"));

        tableSel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "상품코드", "상품이름", "상품가격", "개수"
            }
        ));
        scroll3.setViewportView(tableSel);

        jLabel1.setText("결제금액");

        tfTotal.setEditable(false);
        tfTotal.setText("0");

        btPayment.setText("결제");

        btDelete.setText("삭제");

        btCancle.setText("취소");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancle)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCancle)
                    .addComponent(btDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPayment))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        btCustomer.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btCustomer.setForeground(new java.awt.Color(0, 0, 0));
        btCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/clients_black.png"))); // NOI18N
        btCustomer.setText("고객관리");
        btCustomer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCustomer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        btProduct.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btProduct.setForeground(new java.awt.Color(0, 0, 0));
        btProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Product_black.png"))); // NOI18N
        btProduct.setText("상품관리");
        btProduct.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btProduct.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        btAccount.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btAccount.setForeground(new java.awt.Color(0, 0, 0));
        btAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/kisspng-computer-icons-share-icon-accounting-finance-accounting-5b19cbb713f6b0.6060900815284172070818-1.png"))); // NOI18N
        btAccount.setText("거래처관리");
        btAccount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btAccount.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        tfUserId.setEditable(false);

        jLabel3.setText("님 안녕하세요!");

        btSearch.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btSearch.setText("검색");

        btLogout.setText("로그아웃");

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "상품코드", "상품명", "가격" }));

        tfSearch2.setEditable(false);

        jLabel4.setText(" ~ ");

        btAccount1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btAccount1.setForeground(new java.awt.Color(0, 0, 0));
        btAccount1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Seller.png"))); // NOI18N
        btAccount1.setText("판매원관리");
        btAccount1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btAccount1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        btSearchAll.setText("전체조회");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btSearchAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAccount1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(tfUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLogout)
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(btLogout))
                    .addComponent(btAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAccount1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSearch)
                    .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btSearchAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoreMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoreMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoreMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoreMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoreMainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAccount;
    private javax.swing.JButton btAccount1;
    private javax.swing.JButton btCancle;
    private javax.swing.JButton btCustomer;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btLogout;
    private javax.swing.JButton btPayment;
    private javax.swing.JButton btProduct;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btSearchAll;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JScrollPane scroll2;
    private javax.swing.JScrollPane scroll3;
    private javax.swing.JTable tableList;
    private javax.swing.JTable tablePanmae;
    private javax.swing.JTable tableSel;
    private javax.swing.JTextField tfSearch1;
    private javax.swing.JTextField tfSearch2;
    private javax.swing.JTextField tfTotal;
    private javax.swing.JTextField tfUserId;
    // End of variables declaration//GEN-END:variables

    private void init() {
        panmaeList = new ArrayList<>();
        panListReset();

        setLocationRelativeTo(null);
        searchAll();
        modelSel.addColumn("상품코드");
        modelSel.addColumn("상품이름");
        modelSel.addColumn("상품가격");
        modelSel.addColumn("개수");
        tableListWidth();
        tfTotal.setText(sum + "");

    }

    private void addEvent() {
        btAccount.addActionListener(this);
        btCancle.addActionListener(this);
        btCustomer.addActionListener(this);
        btDelete.addActionListener(this);
        btPayment.addActionListener(this);
        btProduct.addActionListener(this);
        btSearch.addActionListener(this);
        btLogout.addActionListener(this);
        cbSearch.addItemListener(new EventHander());
        tableList.addMouseListener(new EventHander());
        btSearchAll.addActionListener(this);
    }

    public void searchAll() {
        try {
            list = dao.searchAll();
            String[][] data = new String[list.size()][colList.length];
            for (int i = 0; i < list.size(); i++) {
                ProductDTO dto = list.get(i);

                data[i][0] = dto.getPcode();
                data[i][1] = dto.getPname() + "";
                data[i][2] = dto.getPrice() + "";
                data[i][3] = dto.getStock() + "";
            }
            modelList.setDataVector(data, colList);
            tableList.setModel(modelList);
            tableListWidth();

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void delete() {
        int row = 0;
        try {
            row = tableSel.getSelectedRow();
            if (row == -1) {
                throw new IndexOutOfBoundsException();
            }
        } catch (IndexOutOfBoundsException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "삭제할 행을 선택해야 합니다.");
            return;
        }
        String price = (String) tableSel.getValueAt(row, 2);

        modelSel.removeRow(row);
        tableSel.setModel(modelSel);
        sum -= Integer.parseInt(price);
        tfTotal.setText(sum + "");
        panmaeList.remove(row);
        System.out.println("row=" + row);
    }

    private void search() {
        String item = (String) cbSearch.getSelectedItem();
        String val1 = tfSearch1.getText();
        String val2 = tfSearch2.getText();
        System.out.println("item=" + item + ", val1=" + val1 + ", val2=" + val2);
        if (val1 == null || val1.isEmpty()) {
            JOptionPane.showMessageDialog(this, "찾을 값을 입력하셔야 합니다.");
            tfSearch1.requestFocus();
            return;
        }

        try {
            if (item.equals("가격")) {
                if (val2 == null || val2.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "범위를 입력하셔야 합니다.");
                    tfSearch2.requestFocus();
                    return;
                }
                searchPrice(Integer.parseInt(val1), Integer.parseInt(val2));
            } else if (item.equals("상품명")) {
                searchName(val1);
            } else {
                searchCode(val1);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void payment() {
        if (panmaeList == null || panmaeList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "선택된 상품이 없습니다.");
            return;
        }
        if (selId == null || selId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "선택된 상품이 없습니다.");
            return;
        }
        if (sum == 0) {
            JOptionPane.showMessageDialog(this, "선택된 상품이 없습니다.");
            return;
        }
        
        PanmaeGUI p = new PanmaeGUI(selId, panmaeList, sum, this);
        p.setVisible(true);
    }

    public void panListReset() {
        PanmaeDAO pdao = new PanmaeDAO();
        ArrayList<PanmaeDTO> listpan = pdao.searchAll();

        String[][] data = new String[listpan.size()][colPan.length];
        for (int i = 0; i < listpan.size(); i++) {
            PanmaeDTO pdto = listpan.get(i);
            data[i][0] = pdto.getNo() + "";
            data[i][1] = pdto.getCustomerId() + "";
            data[i][2] = pdto.getPcode() + "";
            data[i][3] = pdto.getQuantity() + "";
            data[i][4] = pdto.getPrice() + "";
            data[i][5] = pdto.getSellerId() + "";
            data[i][6] = pdto.getDate() + "";
        }

        modelPan.setDataVector(data, colPan);
        tablePanmae.setModel(modelPan);
        tablePanmaeWidth();
    }

    private void tablePanmaeWidth() {
        tablePanmae.getColumnModel().getColumn(0).setPreferredWidth(10);
        tablePanmae.getColumnModel().getColumn(1).setPreferredWidth(20);
        tablePanmae.getColumnModel().getColumn(2).setPreferredWidth(20);
        tablePanmae.getColumnModel().getColumn(3).setPreferredWidth(10);
        tablePanmae.getColumnModel().getColumn(4).setPreferredWidth(40);
        tablePanmae.getColumnModel().getColumn(5).setPreferredWidth(40);
    }

    private void tableListWidth() {
        tableList.getColumnModel().getColumn(0).setPreferredWidth(10);
        tableList.getColumnModel().getColumn(2).setPreferredWidth(20);
        tableList.getColumnModel().getColumn(3).setPreferredWidth(10);
    }

    public void tablePanmaeClear() {
        modelSel = new DefaultTableModel(colSel, 0);
        tableSel.setModel(modelSel);
        sum = 0;
        tfTotal.setText(sum + "");
        panmaeList = new ArrayList<>();
    }

    class EventHander extends MouseAdapter implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent e) {
            if (e.getSource() == cbSearch) {
                tfSearch1.requestFocus();
                tfSearch1.setText("");
                tfSearch2.setText("");
                String item = (String) cbSearch.getSelectedItem();
                if (item.equals("가격")) {
                    tfSearch2.setEditable(true);
                } else {
                    tfSearch2.setEditable(false);
                }
            }
        }

        @Override
        public void mouseClicked(MouseEvent e) {
            if (e.getSource() == tableList) {
                int row = tableList.getSelectedRow();
                String str = (String) tableList.getValueAt(row, 0);
                String stock = (String) tableList.getValueAt(row, 3);
                
                if(stock == null || stock.equals("0") || stock.isEmpty()){
                    JOptionPane.showMessageDialog(StoreMainGUI.this, "재고가 없습니다.");
                    return;
                }

                String[] data = new String[colSel.length];
                try {
                    list = dao.selectBycode(str);
                    ProductDTO dto = list.get(0);

                    panmaeList.add(dto);

                    data[0] = dto.getPcode() + "";
                    data[1] = dto.getPname();
                    data[2] = dto.getPrice() + "";
                    data[3] = 1 + "";

                    modelSel.addRow(data);
                    tableSel.setModel(modelSel);

                    sum += dto.getPrice();
                    tfTotal.setText(sum + "");

                    ++count;
                    System.out.println("row" + row + "count=" + count + ", sum=" + sum + ", dto=" + dto);

                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btSearchAll) {
            searchAll();
            tfSearch1.setText("");
            tfSearch2.setText("");
        } else if (e.getSource() == btLogout) {
            int n = JOptionPane.showConfirmDialog(this, "로그아웃 하시겠습니까?", "Logout", JOptionPane.YES_NO_OPTION);
            if (n == JOptionPane.YES_OPTION) {
                LoginGUI l = new LoginGUI();
                l.setVisible(true);
                dispose();
            }

        } else if (e.getSource() == btProduct) {
            ProductGUI p = new ProductGUI(this);
            p.setVisible(true);

        } else if (e.getSource() == btCustomer) {
            CustomerGUI c = new CustomerGUI();
            c.setVisible(true);

        } else if (e.getSource() == btAccount) {
            AccountGUI a = new AccountGUI();
            a.setVisible(true);

        } else if (e.getSource() == btCancle) {
            tablePanmaeClear();

        } else if (e.getSource() == btDelete) {
            delete();

        } else if (e.getSource() == btSearch) {
            search();
            tfSearch1.setText("");
            tfSearch2.setText("");
            tableListWidth();
        } else if (e.getSource() == btPayment) {
            payment();
        }
    }

    private void searchPrice(int val1, int val2) throws SQLException {
        list = dao.selectByPrice(val1, val2);
        String[][] data = new String[list.size()][colList.length];
        for (int i = 0; i < list.size(); i++) {
            ProductDTO dto = list.get(i);

            data[i][0] = dto.getPcode();
            data[i][1] = dto.getPname() + "";
            data[i][2] = dto.getPrice() + "";
            data[i][3] = dto.getStock() + "";
        }
        modelList.setDataVector(data, colList);
        tableList.setModel(modelList);
    }

    private void searchName(String val1) throws SQLException {
        list = dao.selectByName(val1);
        String[][] data = new String[list.size()][colList.length];
        for (int i = 0; i < list.size(); i++) {
            ProductDTO dto = list.get(i);

            data[i][0] = dto.getPcode();
            data[i][1] = dto.getPname() + "";
            data[i][2] = dto.getPrice() + "";
            data[i][3] = dto.getStock() + "";
        }
        modelList.setDataVector(data, colList);
        tableList.setModel(modelList);
    }

    private void searchCode(String val1) throws SQLException {

        list = dao.selectBycode(val1);
        String[][] data = new String[list.size()][colList.length];
        for (int i = 0; i < list.size(); i++) {
            ProductDTO dto = list.get(i);
            data[i][0] = dto.getPcode();
            data[i][1] = dto.getPname() + "";
            data[i][2] = dto.getPrice() + "";
            data[i][3] = dto.getStock() + "";
        }
        modelList.setDataVector(data, colList);
        tableList.setModel(modelList);
    }
}
