/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.projectstore.view;

import com.model.customer.CustomerDAO;
import com.model.panmae.PanmaeDAO;
import com.model.panmae.PanmaeDTO;
import com.model.product.ProductDAO;
import com.model.product.ProductDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author STU-03
 */
public class PanmaeGUI extends javax.swing.JFrame implements ActionListener{

    private String selid;
    private int sum;
    private ArrayList<ProductDTO> panmaeList;
    private DefaultTableModel model;
    private String[] colSel = {"상품코드", "상품이름", "상품가격", "개수"};
    
    private CustomerDAO daoCustomer = new CustomerDAO();
    private PanmaeDAO daoPanmae = new PanmaeDAO();
    private ProductDAO daoProduct = new ProductDAO();
    
    private boolean check = false;
    private StoreMainGUI sm = null;
    
    /**
     * Creates new form PanmaeGUI
     */
    public PanmaeGUI() {
        initComponents();
        init();
        addEvent();
    }

    PanmaeGUI(String selId, ArrayList<ProductDTO> panmaeList, int sum, StoreMainGUI sm) {
        this();
        this.sm = sm;
        this.selid = selId;
        tfsSelId.setText(selId);
        this.sum = sum;
        tfPrice.setText(sum+"");
        this.panmaeList = panmaeList;
        System.out.println("selid="+selId+", list"+panmaeList.size()+", sum="+sum);
        
        if(panmaeList == null || panmaeList.isEmpty()){
            JOptionPane.showMessageDialog(this, "선택된 상품이 없습니다.");
            dispose();
        }
        model = new DefaultTableModel();
        String[][] data = new String[panmaeList.size()][colSel.length];
        for (int i = 0; i < panmaeList.size(); i++) {
            ProductDTO dto = panmaeList.get(i);
            
            data[i][0] = dto.getPcode();
            data[i][1] = dto.getPname();
            data[i][2] = dto.getPrice()+"";
            data[i][3] = 1+"";
        }
        model.setDataVector(data, colSel);
        table.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfCustomerId = new javax.swing.JTextField();
        btCheck = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfsSelId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfPrice = new javax.swing.JTextField();
        btSubmit = new javax.swing.JButton();
        btCancle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel1.setText("고객 아이디");

        btCheck.setText("확인");

        jLabel2.setText("판매원 아이디");

        tfsSelId.setEditable(false);

        jLabel3.setText("총 결제 금액");

        tfPrice.setEditable(false);

        btSubmit.setText("결제");
        btSubmit.setEnabled(false);

        btCancle.setText("취소");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(tfCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btCheck))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tfsSelId, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(btSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCancle, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfsSelId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSubmit)
                    .addComponent(btCancle))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanmaeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanmaeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanmaeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanmaeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanmaeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancle;
    private javax.swing.JButton btCheck;
    private javax.swing.JButton btSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfCustomerId;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfsSelId;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        setLocationRelativeTo(null);
        
    }

    private void addEvent() {
        btCheck.addActionListener(this);
        btCancle.addActionListener(this);
        btSubmit.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() == btCheck){
            try {
                idCheck();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            
        }else if(e.getSource() == btCancle){
            dispose();
        }else if(e.getSource() == btSubmit){
            try {
                Submit();
                dispose();
                sm.tablePanmaeClear();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void idCheck() throws SQLException {
        String customerId = tfCustomerId.getText();
        
        if(customerId == null || customerId.isEmpty()){
            JOptionPane.showMessageDialog(this, "고객아이디를 입력하셔야 합니다.");
            tfCustomerId.requestFocus();
            return;
        }
        
        int n = daoCustomer.idCheck(customerId);
        
        String result = "";
        if(n == CustomerDAO.OK){
            result = customerId + "에 해당하는 아이디가 있습니다.";
            check = true;
            tfCustomerId.setEditable(false);
        }else{
            result = customerId + "에 해당하는 아이디가 없습니다.";
            tfCustomerId.setText("");
            tfCustomerId.requestFocus();
            check = false;
        }
        btSubmit.setEnabled(check);
        JOptionPane.showMessageDialog(this, result);
    }

    private void Submit() throws SQLException {
        for (int i = 0; i < panmaeList.size(); i++) {
            ProductDTO dto = panmaeList.get(i);
            PanmaeDTO dtoPan = new PanmaeDTO();
            dtoPan.setCustomerId(tfCustomerId.getText());
            dtoPan.setPcode(dto.getPcode());
            dtoPan.setPrice(dto.getPrice());
            dtoPan.setQuantity(1);
            dtoPan.setSellerId(tfsSelId.getText());
            
            int insertN = daoPanmae.insertPanmae(dtoPan);
            
            int panmaeN = daoProduct.panmae(dtoPan.getPcode());
            System.out.println("처리된 결과 insertN=" + insertN + ", panmaeN=" + panmaeN);
        }
        sm.panListReset();
    }
}
